import tkinter as tk
from tkinter import messagebox

# Configuración de la ventana principal
root = tk.Tk()
root.title("Gestor de Tareas")
root.geometry("400x300")

# Campo de entrada para nuevas tareas
entry_task = tk.Entry(root, width=35)
entry_task.pack(pady=10)

# Lista para mostrar tareas
task_listbox = tk.Listbox(root, width=45, height=10, selectmode=tk.SINGLE)
task_listbox.pack(pady=10)

# Frame para los botones
frame_buttons = tk.Frame(root)
frame_buttons.pack(pady=10)

# Botón para añadir tareas
btn_add_task = tk.Button(frame_buttons, text="Añadir Tarea", command=lambda: add_task())
btn_add_task.pack(side=tk.LEFT, padx=5)

# Botón para marcar como completada
btn_mark_completed = tk.Button(frame_buttons, text="Marcar como Completada", command=lambda: mark_completed())
btn_mark_completed.pack(side=tk.LEFT, padx=5)

# Botón para eliminar tareas
btn_delete_task = tk.Button(frame_buttons, text="Eliminar Tarea", command=lambda: delete_task())
btn_delete_task.pack(side=tk.LEFT, padx=5)

# Función para añadir una nueva tarea
def add_task():
    task = entry_task.get()
    if task:
        task_listbox.insert(tk.END, task)
        entry_task.delete(0, tk.END)
    else:
        messagebox.showwarning("Advertencia", "La tarea no puede estar vacía.")

# Función para marcar una tarea como completada
def mark_completed():
    selected_task_index = task_listbox.curselection()
    if selected_task_index:
        task = task_listbox.get(selected_task_index)
        task_listbox.delete(selected_task_index)
        task_listbox.insert(selected_task_index, f"[Completada] {task}")
    else:
        messagebox.showwarning("Advertencia", "Selecciona una tarea para marcar como completada.")

# Función para eliminar una tarea
def delete_task():
    selected_task_index = task_listbox.curselection()
    if selected_task_index:
        task_listbox.delete(selected_task_index)
    else:
        messagebox.showwarning("Advertencia", "Selecciona una tarea para eliminar.")

# Añadir tarea con la tecla Enter
entry_task.bind("<Return>", lambda event: add_task())

# Marcar tarea como completada con doble clic
task_listbox.bind("<Double-1>", lambda event: mark_completed())

# Ejecutar la aplicación
root.mainloop()
